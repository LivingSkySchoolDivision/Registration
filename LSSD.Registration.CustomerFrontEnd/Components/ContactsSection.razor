@using LSSD.Registration.Model
@using System.Linq;
@using System.Collections.Generic;
@using LSSD.Registration.CustomerFrontEnd.Services;

@code {
    [Inject]
    LSSD.Registration.CustomerFrontEnd.Services.FormStepTrackerService StepTracker { get; set; }

    [Inject]
    public BrowserStorageService BrowserStorage { get; set; }

    [Parameter]
    public string FormName { get; set; }

    [Parameter]
    public int StepNumber { get; set; }

    ContactsInfo ContactsInfoData = new ContactsInfo();
    Student LoadedStudentDemographics = new Student();
    FormSubmitter SavedFormSubmitter;

    protected override async Task OnInitializedAsync()
    {
        ContactsInfoData = await BrowserStorage.GetOrNew<ContactsInfo>(StorageKeys.Contacts);
        LoadedStudentDemographics = await BrowserStorage.GetOrNew<Student>(StorageKeys.StudentDemographics);
        SavedFormSubmitter = await BrowserStorage.Get<FormSubmitter>(StorageKeys.Requestor);
    }

    protected async Task OnClick_PreviousStepButton()
    {
        await saveForm();
        StepTracker.PreviousStep(FormName);
    }

    protected async Task HandleValidSubmit()
    {
        await saveForm();
        StepTracker.NextStep(FormName);
    }

    protected async Task HandleInValidSubmit()
    {
        await saveForm();
    }

    private async Task saveForm()
    {
        if (LoadedStudentDemographics != null)
        {
            ContactsInfoData.Contacts.RemoveAll(x => x.IsEmpty());
            foreach (Contact contact in ContactsInfoData.Contacts)
            {
                if (contact.LivesWithStudent)
                {
                    if (contact.SameMailingAddressAsStudent)
                    {
                        contact.MailingAddress = LoadedStudentDemographics.MailingAddress;
                    }

                    if (contact.SamePrimaryAddressAsStudent)
                    {
                        contact.PrimaryAddress = LoadedStudentDemographics.PrimaryAddress;
                    }
                }
            }
        }
        await BrowserStorage.Set(StorageKeys.Contacts, ContactsInfoData);
    }

    private void AddContact()
    {
        ContactsInfoData.Contacts.Add(new Contact());
    }

    private void RemoveContact(Contact contact)
    {
        if (ContactsInfoData.Contacts.Contains(contact))
        {
            ContactsInfoData.Contacts.Remove(contact);
        }
    }

    private void AddMe()
    {
        if (SavedFormSubmitter != null)
        {
            ContactsInfoData.Contacts.Add(new Contact() {
                FirstName = SavedFormSubmitter.FirstName,
                LastName = SavedFormSubmitter.LastName,
                LivesWithStudent = true,
                SamePrimaryAddressAsStudent = true,
                SameMailingAddressAsStudent = true,
                ShouldRecieveMailAboutStudent = true,
                RelationshipToStudent = "Parent"                
            });
        }
    }
}

<div class="container">
    <h2>Contacts</h2>
    <EditForm Model="@ContactsInfoData" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInValidSubmit">
        <p>A contact might be:</p>
        <ul>
            <li>A parent or legal guardian of the child.</li>
            <li>Anyone who might transport the child to/from school (excluding school busses).</li>
            <li>Anyone who might call the school to explain an absence.</li>
            <li>A family member, friend, or billet who's home the child might go to before or after school, or during extreme weather</li>
            <li>An emergency contact, such as a family friend or neighbor.</li>
            <li>Anyone who should have access to the child's data, or who should receive school notifications.</li>
        </ul>
        <p><b>Do not</b> include family doctors as contacts. </p>
        <DataAnnotationsValidator />
        <ValidationSummary />
        <button type="button" class="btn-sm btn-primary" @onclick="AddContact">Add Contact</button>
        @if (SavedFormSubmitter != null)
        {
            <button type="button" class="btn-sm btn-info" @onclick="AddMe">Add Me</button>
        }
        <br />
        <br />
        @if (ContactsInfoData.Contacts.Count > 0)
        {
            @foreach (Contact Contact in ContactsInfoData.Contacts)
            {
                <div class="form-group container p-2" style="border: 1px solid #dbdbdb;border-radius:2px">
                    <div class="form-row">
                        <label class="col-sm-3 font-weight-normal">First Name: </label>
                        <InputText id="studentLegalFirstName" class="form-control col-sm-6 form-control-sm" @bind-Value="@Contact.FirstName"></InputText>
                        <ValidationMessage class="offset-sm-4 col-sm-6" For="@(() => Contact.FirstName)" />
                    </div>

                    <div class="form-row">
                        <label class="col-sm-3 font-weight-normal">Last Name: </label>
                        <InputText id="" class="form-control col-sm-6 form-control-sm" @bind-Value="@Contact.LastName"></InputText>
                        <ValidationMessage class="offset-sm-4 col-sm-6" For="@(() => Contact.LastName)" />
                    </div>

                    <div class="form-row">
                        <label class="col-sm-3 font-weight-normal">Relationship to student: </label>
                        <InputText id="" class="form-control col-sm-6 form-control-sm" @bind-Value="@Contact.RelationshipToStudent"></InputText>
                        <ValidationMessage class="offset-sm-4 col-sm-6" For="@(() => Contact.RelationshipToStudent)" />
                    </div>

                    <div class="form-row">
                        <label class="col-sm-3 font-weight-normal">Email Address: </label>
                        <InputText id="" class="form-control col-sm-6 form-control-sm" @bind-Value="@Contact.EmailAddress"></InputText>
                        <ValidationMessage class="offset-sm-4 col-sm-6" For="@(() => Contact.EmailAddress)" />
                    </div>

                    <div class="form-row">
                        <label class="col-sm-3 font-weight-normal">Home Phone: </label>
                        <InputText id="" class="form-control col-sm-6 form-control-sm" @bind-Value="@Contact.HomePhone"></InputText>
                        <ValidationMessage class="offset-sm-4 col-sm-6" For="@(() => Contact.HomePhone)" />
                    </div>
                    <div class="form-row">
                        <label class="col-sm-3 font-weight-normal">Cell Phone: </label>
                        <InputText id="" class="form-control col-sm-6 form-control-sm" @bind-Value="@Contact.CellPhone"></InputText>
                        <ValidationMessage class="offset-sm-4 col-sm-6" For="@(() => Contact.CellPhone)" />
                    </div>
                    <div class="form-row">
                        <label class="col-sm-3 font-weight-normal">Work Phone: </label>
                        <InputText id="" class="form-control col-sm-6 form-control-sm" @bind-Value="@Contact.WorkPhone"></InputText>
                        <ValidationMessage class="offset-sm-4 col-sm-6" For="@(() => Contact.WorkPhone)" />
                    </div>
                    <div class="form-row">
                        <label class="col-sm-3 font-weight-normal">Alternate means of contact: </label>
                        <InputText id="" class="form-control col-sm-6 form-control-sm" @bind-Value="@Contact.AlternateContactInfo"></InputText>
                        <ValidationMessage class="offset-sm-4 col-sm-6" For="@(() => Contact.AlternateContactInfo)" />
                    </div>
                    <div class="form-row">
                        <label class="col-sm-3 font-weight-normal">Employer / Workplace: </label>
                        <InputText id="" class="form-control col-sm-6 form-control-sm" @bind-Value="@Contact.Employer"></InputText>
                        <ValidationMessage class="offset-sm-4 col-sm-6" For="@(() => Contact.Employer)" />
                    </div>
                    <div class="form-group">

                        <div class="form-row">
                            <div class="offset-sm-3">
                                <InputCheckbox id="" @bind-Value="@Contact.LivesWithStudent"></InputCheckbox>
                                <label class="font-weight-normal">This contact lives with the student </label>
                                <ValidationMessage For="@(() => Contact.LivesWithStudent)" />
                            </div>
                        </div>

                        @if (Contact.LivesWithStudent)
                        {
                            <div class="form-row">
                                <div class="offset-sm-3">
                                    <InputCheckbox id="" @bind-Value="@Contact.SamePrimaryAddressAsStudent"></InputCheckbox>
                                    <label class="font-weight-normal">Same primary address as student</label>
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="offset-sm-3">
                                    <InputCheckbox id="" @bind-Value="@Contact.SameMailingAddressAsStudent"></InputCheckbox>
                                    <label class="font-weight-normal">Same mailing address as student</label>
                                </div>
                            </div>
                        }

                    </div>
                    <div class="form-row">
                        <div class="offset-sm-3">
                            <InputCheckbox id="" @bind-Value="@Contact.ShouldRecieveMailAboutStudent"></InputCheckbox>
                            <label class="font-weight-normal">This contact can access the student's data (grades, attendance, report card)</label>
                            <ValidationMessage For="@(() => Contact.ShouldRecieveMailAboutStudent)" />
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="col-sm-3">
                            <label>Contact Priority: </label>
                            <p class="text-muted small">Calling order in case of emergency.</p>
                        </div>
                        <div class="col-sm-9">
                            <InputNumber id="" class="form-control col-sm-1 form-control-sm" @bind-Value="@Contact.ContactPriority"></InputNumber>
                            <ValidationMessage class="offset-sm-4 col-sm-6" For="@(() => Contact.ContactPriority)" />
                        </div>
                    </div>
                    <div class="form-row">
                        @if (!Contact.SamePrimaryAddressAsStudent || !Contact.LivesWithStudent)
                        {
                            <div class="col-sm-6">
                                <h5>Primary Address</h5>
                                <div class="form-group">
                                    <div class="form-row">
                                        <div class="col-sm-3">
                                            <label class="font-weight-normal">Line 1 </label>
                                        </div>
                                        <InputText id="studentPrimaryUnitNo" class="form-control col-sm-8 form-control-sm" @bind-Value="@Contact.PrimaryAddress.Line1"></InputText>
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => Contact.PrimaryAddress.Line1)" />
                                    </div>
                                    <div class="form-row">
                                        <div class="col-sm-3">
                                            <label class="font-weight-normal">Line 2 </label>
                                        </div>
                                        <InputText id="studentPrimaryUnitNo" class="form-control col-sm-8 form-control-sm" @bind-Value="@Contact.PrimaryAddress.Line2"></InputText>
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => Contact.PrimaryAddress.Line2)" />
                                    </div>
                                    <div class="form-row">
                                        <div class="col-sm-3">
                                            <label class="font-weight-normal">City</label>
                                        </div>
                                        <InputText id="studentPrimaryUnitNo" class="form-control col-sm-8 form-control-sm" @bind-Value="@Contact.PrimaryAddress.City"></InputText>
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => Contact.PrimaryAddress.City)" />
                                    </div>
                                    <div class="form-row">
                                        <div class="col-sm-3">
                                            <label class="font-weight-normal">Province:</label>
                                        </div>
                                        <InputText id="studentPrimaryUnitNo" class="form-control col-sm-8 form-control-sm" @bind-Value="@Contact.PrimaryAddress.Province"></InputText>
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => Contact.PrimaryAddress.Province)" />
                                    </div>
                                    <div class="form-row">
                                        <div class="col-sm-3">
                                            <label class="font-weight-normal">Postal Code</label>
                                        </div>
                                        <InputText id="studentPrimaryUnitNo" class="form-control col-sm-8 form-control-sm" @bind-Value="@Contact.PrimaryAddress.PostalCode"></InputText>
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => Contact.PrimaryAddress.PostalCode)" />
                                    </div>
                                    <div class="form-row">
                                        <div class="col-sm-3">
                                            <label class="font-weight-normal">Country:</label>
                                        </div>
                                        <InputText id="studentPrimaryUnitNo" class="form-control col-sm-8 form-control-sm" @bind-Value="@Contact.PrimaryAddress.Country"></InputText>
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => Contact.PrimaryAddress.Country)" />
                                    </div>
                                </div>
                            </div>
                        }
                        @if (!Contact.SameMailingAddressAsStudent || !Contact.LivesWithStudent)
                        {
                            <div class="col-sm-6">
                                <h5>Mailing Address</h5>
                                <div class="form-group">
                                    <div class="form-row">
                                        <div class="col-sm-3">
                                            <label class="font-weight-normal">Unit Number </label>
                                        </div>
                                        <InputText id="studentPrimaryUnitNo" class="form-control col-sm-8 form-control-sm" @bind-Value="@Contact.MailingAddress.Line1"></InputText>
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => Contact.MailingAddress.Line1)" />
                                    </div>
                                    <div class="form-row">
                                        <div class="col-sm-3">
                                            <label class="font-weight-normal">Street </label>
                                        </div>
                                        <InputText id="studentPrimaryUnitNo" class="form-control col-sm-8 form-control-sm" @bind-Value="@Contact.MailingAddress.Line2"></InputText>
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => Contact.MailingAddress.Line2)" />
                                    </div>
                                    <div class="form-row">
                                        <div class="col-sm-3">
                                            <label class="font-weight-normal">City</label>
                                        </div>
                                        <InputText id="studentPrimaryUnitNo" class="form-control col-sm-8 form-control-sm" @bind-Value="@Contact.MailingAddress.City"></InputText>
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => Contact.MailingAddress.City)" />
                                    </div>
                                    <div class="form-row">
                                        <div class="col-sm-3">
                                            <label class="font-weight-normal">Province:</label>
                                        </div>
                                        <InputText id="studentPrimaryUnitNo" class="form-control col-sm-8 form-control-sm" @bind-Value="@Contact.MailingAddress.Province"></InputText>
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => Contact.MailingAddress.Province)" />
                                    </div>
                                    <div class="form-row">
                                        <div class="col-sm-3">
                                            <label class="font-weight-normal">Postal Code</label>
                                        </div>
                                        <InputText id="studentPrimaryUnitNo" class="form-control col-sm-8 form-control-sm" @bind-Value="@Contact.MailingAddress.PostalCode"></InputText>
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => Contact.MailingAddress.PostalCode)" />
                                    </div>
                                    <div class="form-row">
                                        <div class="col-sm-3">
                                            <label class="font-weight-normal">Country:</label>
                                        </div>
                                        <InputText id="studentPrimaryUnitNo" class="form-control col-sm-8 form-control-sm" @bind-Value="@Contact.MailingAddress.Country"></InputText>
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => Contact.MailingAddress.Country)" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                                        
                    <div class="form-row">
                        <label class="col-sm-3 font-weight-normal">Notes: </label>
                        <InputTextArea id="" class="form-control col-sm-6 form-control-sm" @bind-Value="@Contact.Note"></InputTextArea>
                        <ValidationMessage class="offset-sm-4 col-sm-6" For="@(() => Contact.Note)" />
                    </div>

                    <div class="form-row">
                        <button type="button" class="btn-sm btn-link col-sm-1" @onclick="@(() => RemoveContact(Contact))">Remove</button>
                    </div>
                </div>
            }

            <button type="button" class="btn-sm btn-primary" @onclick="AddContact">Add another contact</button>
        }
        else
        {
            <p><i>No contacts.</i></p>
        }

        <ValidationSummary />
        <br /><br />
        <div class="form-group">
            <div class="form-row">
                <div class="col">
                    <button type="button" @onclick="OnClick_PreviousStepButton" class="btn btn-secondary btn-block">Previous Step</button>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary btn-block">Next Step</button>
                </div>
            </div>
        </div>
    </EditForm>
    <br />
</div>